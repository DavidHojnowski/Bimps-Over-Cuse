import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

public class Controller implements KeyListener{
	//We implement keylistner becuase the key listner is going to be the main driver of the controller

	View view;
	Model model;
	
	//The key codes for up, down, left, and right
	private static final int UP=38;
	private static final int DOWN =40;
	private static final int LEFT = 37;
	private static final int RIGHT = 39;
	
	//booleans to indicate wheter a button is curently being pressed
	private boolean upPressed;
	private boolean downPressed;
	private boolean leftPressed;
	private boolean rightPressed;
	
	
	public Controller(){
		view = new View(this);
		model = new Model();

	}
	
	//this method should be called to kick off the whole process
	//Should include any set up or configuration code 
	//I.E tell the view the first thing to draw or set up the sockets or intialize any data or files in the model
	public void start(){
		
	}
	
	@Override
	public void keyPressed(KeyEvent arg0) {
		// TODO Auto-generated method stub
		System.out.println(arg0.getKeyCode() + " Key Pressed");
		//Now we actually have to do something with this 
	
	}

	@Override
	public void keyReleased(KeyEvent arg0) {
		// TODO Auto-generated method stub
		System.out.println(arg0.getKeyCode() + " Key Released");
	}

	//Have to include this method here but probably will never use it 
	@Override
	public void keyTyped(KeyEvent arg0) {
		// TODO Auto-generated method stub
		//System.out.println("Key Typed");
		
	}
	
	//this method then handles what to do once a key has been pressed
	private void handleKeyPress(int keyCode){
		switch(keyCode){
			case:UP
				up = true;
				
		}
			

				

			
				
		
	
				
		
		
	}
	
	//this method handles what to do once a key has been relaseed
	private void handleKeyRelease(int keyCode){
		
	}
}
